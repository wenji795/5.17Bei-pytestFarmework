{"name": "ID:3 -- 查询用户数据列表成功", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_runner.TestRunner object at 0x1049bab70>\ncase = {'check': '$..msg', 'data': None, 'expected': '获取管理员列表成功', 'feature': '用户管理', ...}\n\n    @pytest.mark.parametrize(\"case\", data)\n    def test_case(self, case):\n    \n            # 引用全局的all\n            all = self.all\n    \n            #根据all的值，渲染case\n            case = eval(Template(str(case)).render(all))\n    \n            #初始化allure报告\n            allure_init(case=case)\n    \n            # 0.测试用例的描述信息日志\n            logging.info(f\"0.用例ID：{case[\"id\"]} 模块：{case[\"feature\"]} 场景：{case[\"story\"]} 标题：{case[\"title\"]}\")\n    \n            # 核心步骤1: 解析请求数据\n            request_data = analyse_case(case)\n    \n            #核心步骤2: 发起请求，得到响应结果\n            res = send_http_request(**request_data)\n    \n            #核心步骤3: 处理断言\n            #http响应断言\n>           http_assert(case, res)\n\ntestcases/test_runner.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase = {'check': '$..msg', 'data': None, 'expected': '获取管理员列表成功', 'feature': '用户管理', ...}\nres = <Response [200]>\n\n    @allure.step(\"3.HTTP响应断言\")\n    def http_assert(case, res):\n        if case[\"check\"]:\n            r = jsonpath.jsonpath(res.json(), case[\"check\"])[0]\n            logging.info(f\"3.HTTP响应断言: 实际结果【{r}】 == 预期结果【{case[\"expected\"]}】\")\n            # assert 实际结果 == 预期结果\n>           assert r == case[\"expected\"]\n                   ^^^^^^^^^^^^^^^^^^^^^\nE           AssertionError\n\nutils/asserts.py:12: AssertionError"}, "steps": [{"name": "1.解析请求数据", "status": "passed", "parameters": [{"name": "case", "value": "{'id': 3, 'feature': '用户管理', 'story': '查询成功', 'title': '查询用户数据列表成功', 'method': 'get', 'path': '/users', 'headers': '{\"Authorization\": \"\"}', 'params': '{\"pagenum\": 1, \"pagesize\": 1}', 'data': None, 'json': None, 'files': None, 'check': '$..msg', 'expected': '获取管理员列表成功', 'sql_check': None, 'sql_expected': None, 'jsonExData': None, 'sqlExData': None, 'is_true': True}"}], "start": 1759544741851, "stop": 1759544741852}, {"name": "2.发送HTTP请求", "status": "passed", "parameters": [{"name": "method", "value": "'get'"}, {"name": "url", "value": "'http://8.138.193.96:8888/api/private/v1/users'"}, {"name": "headers", "value": "{'Authorization': ''}"}, {"name": "params", "value": "{'pagenum': 1, 'pagesize': 1}"}, {"name": "data", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}], "start": 1759544741852, "stop": 1759544742461}, {"name": "3.HTTP响应断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/Users/swj_795/venvs/swj-env/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/swj_795/Desktop/北梦测/Bei-Projects/5.17Bei-pytestFarmework/utils/asserts.py\", line 12, in http_assert\n    assert r == case[\"expected\"]\n           ^^^^^^^^^^^^^^^^^^^^^\n"}, "parameters": [{"name": "case", "value": "{'id': 3, 'feature': '用户管理', 'story': '查询成功', 'title': '查询用户数据列表成功', 'method': 'get', 'path': '/users', 'headers': '{\"Authorization\": \"\"}', 'params': '{\"pagenum\": 1, \"pagesize\": 1}', 'data': None, 'json': None, 'files': None, 'check': '$..msg', 'expected': '获取管理员列表成功', 'sql_check': None, 'sql_expected': None, 'jsonExData': None, 'sqlExData': None, 'is_true': True}"}, {"name": "res", "value": "<Response [200]>"}], "start": 1759544742461, "stop": 1759544742461}], "attachments": [{"name": "log", "source": "dd712165-43b6-4d5a-880e-7e7e08aa9303-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'id': 3, 'feature': '用户管理', 'story': '查询成功', 'title': '查询用户数据列表成功', 'method': 'get', 'path': '/users', 'headers': '{\"Authorization\": \"{{TOKEN}}\"}', 'params': '{\"pagenum\": 1, \"pagesize\": 1}', 'data': None, 'json': None, 'files': None, 'check': '$..msg', 'expected': '获取管理员列表成功', 'sql_check': None, 'sql_expected': None, 'jsonExData': None, 'sqlExData': None, 'is_true': True}"}], "start": 1759544741849, "stop": 1759544742464, "uuid": "4fa05c9c-b835-4c9d-b7b0-31f162e9efa6", "historyId": "fbe69ebc3b1b7a358a0bdc8c4863d55a", "testCaseId": "f4c9a5433c9d0f70aa3669f0895ebca2", "fullName": "testcases.test_runner.TestRunner#test_case", "labels": [{"name": "feature", "value": "用户管理"}, {"name": "story", "value": "查询成功"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_runner"}, {"name": "subSuite", "value": "TestRunner"}, {"name": "host", "value": "WenjideMacBook-Pro.local"}, {"name": "thread", "value": "16839-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_runner"}], "titlePath": ["testcases", "test_runner.py", "TestRunner"]}