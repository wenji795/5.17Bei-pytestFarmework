{"uid":"8cd89c5bf40dcb40","name":"ID:1 -- 管理员登录成功","fullName":"testcases.test_runner.TestRunner#test_case","historyId":"9c99d33d82f451be7439a5130e11d68a","time":{"start":1759544724638,"stop":1759544740169,"duration":15531},"status":"broken","statusMessage":"pymysql.err.InternalError: Packet sequence number wrong - got 1 expected 2","statusTrace":"self = <test_runner.TestRunner object at 0x1049c0350>\ncase = {'check': '$..msg', 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'expected': '登录成功', 'feature': '登录', ...}\n\n    @pytest.mark.parametrize(\"case\", data)\n    def test_case(self, case):\n    \n            # 引用全局的all\n            all = self.all\n    \n            #根据all的值，渲染case\n            case = eval(Template(str(case)).render(all))\n    \n            #初始化allure报告\n            allure_init(case=case)\n    \n            # 0.测试用例的描述信息日志\n            logging.info(f\"0.用例ID：{case[\"id\"]} 模块：{case[\"feature\"]} 场景：{case[\"story\"]} 标题：{case[\"title\"]}\")\n    \n            # 核心步骤1: 解析请求数据\n            request_data = analyse_case(case)\n    \n            #核心步骤2: 发起请求，得到响应结果\n            res = send_http_request(**request_data)\n    \n            #核心步骤3: 处理断言\n            #http响应断言\n            http_assert(case, res)\n    \n            #数据库断言\n>           jdbc_assert(case)\n\ntestcases/test_runner.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts.py:25: in jdbc_assert\n    assert send_jdbc_request(case[\"sql_check\"]) == case[\"sql_expected\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/send_request.py:21: in send_jdbc_request\n    conn = pymysql.Connect(  # pymysql.Connect() 是 PyMySQL 的连接方法，用来连接 MySQL 数据库\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:365: in __init__\n    self.connect()\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:681: in connect\n    self._request_authentication()\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:958: in _request_authentication\n    auth_packet = self._read_packet()\n                  ^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x1049bbad0>\npacket_type = <class 'pymysql.protocol.MysqlPacket'>\n\n    def _read_packet(self, packet_type=MysqlPacket):\n        \"\"\"Read an entire \"mysql packet\" in its entirety from the network\n        and return a MysqlPacket type that represents the results.\n    \n        :raise OperationalError: If the connection to the MySQL server is lost.\n        :raise InternalError: If the packet sequence number is wrong.\n        \"\"\"\n        buff = bytearray()\n        while True:\n            packet_header = self._read_bytes(4)\n            # if DEBUG: dump_packet(packet_header)\n    \n            btrl, btrh, packet_number = struct.unpack(\"<HBB\", packet_header)\n            bytes_to_read = btrl + (btrh << 16)\n            if packet_number != self._next_seq_id:\n                self._force_close()\n                if packet_number == 0:\n                    # MariaDB sends error packet with seqno==0 when shutdown\n                    raise err.OperationalError(\n                        CR.CR_SERVER_LOST,\n                        \"Lost connection to MySQL server during query\",\n                    )\n>               raise err.InternalError(\n                    \"Packet sequence number wrong - got %d expected %d\"\n                    % (packet_number, self._next_seq_id)\n                )\nE               pymysql.err.InternalError: Packet sequence number wrong - got 1 expected 2\n\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:764: InternalError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"pymysql.err.InternalError: Packet sequence number wrong - got 1 expected 2","statusTrace":"self = <test_runner.TestRunner object at 0x1049c0350>\ncase = {'check': '$..msg', 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'expected': '登录成功', 'feature': '登录', ...}\n\n    @pytest.mark.parametrize(\"case\", data)\n    def test_case(self, case):\n    \n            # 引用全局的all\n            all = self.all\n    \n            #根据all的值，渲染case\n            case = eval(Template(str(case)).render(all))\n    \n            #初始化allure报告\n            allure_init(case=case)\n    \n            # 0.测试用例的描述信息日志\n            logging.info(f\"0.用例ID：{case[\"id\"]} 模块：{case[\"feature\"]} 场景：{case[\"story\"]} 标题：{case[\"title\"]}\")\n    \n            # 核心步骤1: 解析请求数据\n            request_data = analyse_case(case)\n    \n            #核心步骤2: 发起请求，得到响应结果\n            res = send_http_request(**request_data)\n    \n            #核心步骤3: 处理断言\n            #http响应断言\n            http_assert(case, res)\n    \n            #数据库断言\n>           jdbc_assert(case)\n\ntestcases/test_runner.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts.py:25: in jdbc_assert\n    assert send_jdbc_request(case[\"sql_check\"]) == case[\"sql_expected\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/send_request.py:21: in send_jdbc_request\n    conn = pymysql.Connect(  # pymysql.Connect() 是 PyMySQL 的连接方法，用来连接 MySQL 数据库\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:365: in __init__\n    self.connect()\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:681: in connect\n    self._request_authentication()\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:958: in _request_authentication\n    auth_packet = self._read_packet()\n                  ^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pymysql.connections.Connection object at 0x1049bbad0>\npacket_type = <class 'pymysql.protocol.MysqlPacket'>\n\n    def _read_packet(self, packet_type=MysqlPacket):\n        \"\"\"Read an entire \"mysql packet\" in its entirety from the network\n        and return a MysqlPacket type that represents the results.\n    \n        :raise OperationalError: If the connection to the MySQL server is lost.\n        :raise InternalError: If the packet sequence number is wrong.\n        \"\"\"\n        buff = bytearray()\n        while True:\n            packet_header = self._read_bytes(4)\n            # if DEBUG: dump_packet(packet_header)\n    \n            btrl, btrh, packet_number = struct.unpack(\"<HBB\", packet_header)\n            bytes_to_read = btrl + (btrh << 16)\n            if packet_number != self._next_seq_id:\n                self._force_close()\n                if packet_number == 0:\n                    # MariaDB sends error packet with seqno==0 when shutdown\n                    raise err.OperationalError(\n                        CR.CR_SERVER_LOST,\n                        \"Lost connection to MySQL server during query\",\n                    )\n>               raise err.InternalError(\n                    \"Packet sequence number wrong - got %d expected %d\"\n                    % (packet_number, self._next_seq_id)\n                )\nE               pymysql.err.InternalError: Packet sequence number wrong - got 1 expected 2\n\n../../../../venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py:764: InternalError","steps":[{"name":"1.解析请求数据","time":{"start":1759544724639,"stop":1759544724639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"case","value":"{'id': 1, 'feature': '登录', 'story': '登录成功', 'title': '管理员登录成功', 'method': 'post', 'path': '/login', 'headers': None, 'params': None, 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'json': None, 'files': None, 'check': '$..msg', 'expected': '登录成功', 'sql_check': 'select mg_name from sp_manager where mg_name = \"admin\" ', 'sql_expected': 'admin', 'jsonExData': '{\"TOKEN\": \"$..token\"}', 'sqlExData': '{\"ADMIN_NAME\": \"select mg_name from sp_manager where mg_name = \\'admin\\' \"}', 'is_true': True}"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"2.发送HTTP请求","time":{"start":1759544724639,"stop":1759544726310,"duration":1671},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"method","value":"'post'"},{"name":"url","value":"'http://8.138.193.96:8888/api/private/v1/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"data","value":"{'username': 'admin', 'password': '123456'}"},{"name":"json","value":"None"},{"name":"files","value":"None"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"3.HTTP响应断言","time":{"start":1759544726310,"stop":1759544726312,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"case","value":"{'id': 1, 'feature': '登录', 'story': '登录成功', 'title': '管理员登录成功', 'method': 'post', 'path': '/login', 'headers': None, 'params': None, 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'json': None, 'files': None, 'check': '$..msg', 'expected': '登录成功', 'sql_check': 'select mg_name from sp_manager where mg_name = \"admin\" ', 'sql_expected': 'admin', 'jsonExData': '{\"TOKEN\": \"$..token\"}', 'sqlExData': '{\"ADMIN_NAME\": \"select mg_name from sp_manager where mg_name = \\'admin\\' \"}', 'is_true': True}"},{"name":"res","value":"<Response [200]>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"3.JDBC 数据库响应断言","time":{"start":1759544726312,"stop":1759544740165,"duration":13853},"status":"broken","statusMessage":"pymysql.err.InternalError: Packet sequence number wrong - got 1 expected 2\n","statusTrace":"  File \"/Users/swj_795/Desktop/北梦测/Bei-Projects/5.17Bei-pytestFarmework/utils/asserts.py\", line 25, in jdbc_assert\n    assert send_jdbc_request(case[\"sql_check\"]) == case[\"sql_expected\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/swj_795/Desktop/北梦测/Bei-Projects/5.17Bei-pytestFarmework/utils/send_request.py\", line 21, in send_jdbc_request\n    conn = pymysql.Connect(  # pymysql.Connect() 是 PyMySQL 的连接方法，用来连接 MySQL 数据库\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/swj_795/venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py\", line 365, in __init__\n    self.connect()\n  File \"/Users/swj_795/venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py\", line 681, in connect\n    self._request_authentication()\n  File \"/Users/swj_795/venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py\", line 958, in _request_authentication\n    auth_packet = self._read_packet()\n                  ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/swj_795/venvs/swj-env/lib/python3.12/site-packages/pymysql/connections.py\", line 764, in _read_packet\n    raise err.InternalError(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6383d39a54a4426","name":"log","source":"6383d39a54a4426.txt","type":"text/plain","size":958}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"登录"},{"name":"story","value":"登录成功"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_runner"},{"name":"subSuite","value":"TestRunner"},{"name":"host","value":"WenjideMacBook-Pro.local"},{"name":"thread","value":"16839-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_runner"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'id': 1, 'feature': '登录', 'story': '登录成功', 'title': '管理员登录成功', 'method': 'post', 'path': '/login', 'headers': None, 'params': None, 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'json': None, 'files': None, 'check': '$..msg', 'expected': '登录成功', 'sql_check': 'select mg_name from sp_manager where mg_name = \"admin\" ', 'sql_expected': 'admin', 'jsonExData': '{\"TOKEN\": \"$..token\"}', 'sqlExData': '{\"ADMIN_NAME\": \"select mg_name from sp_manager where mg_name = \\'admin\\' \"}', 'is_true': True}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8cd89c5bf40dcb40.json","parameterValues":["{'id': 1, 'feature': '登录', 'story': '登录成功', 'title': '管理员登录成功', 'method': 'post', 'path': '/login', 'headers': None, 'params': None, 'data': '{\"username\": \"admin\", \"password\": \"123456\"}', 'json': None, 'files': None, 'check': '$..msg', 'expected': '登录成功', 'sql_check': 'select mg_name from sp_manager where mg_name = \"admin\" ', 'sql_expected': 'admin', 'jsonExData': '{\"TOKEN\": \"$..token\"}', 'sqlExData': '{\"ADMIN_NAME\": \"select mg_name from sp_manager where mg_name = \\'admin\\' \"}', 'is_true': True}"]}